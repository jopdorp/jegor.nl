---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tekton-github-listener-ingress
  annotations:
    kubernetes.io/ingress.className: "traefik"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
    - host: webhook.tekton.jegor-nl.k8s.jegor.nl
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: el-tekton-github-listener
                port:
                  number: 8080
  tls:
  - hosts:
      - webhook.tekton.jegor-nl.k8s.jegor.nl
    secretName: tekton-listener-tls
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: tekton-github-listener
spec:
  serviceAccountName: tekton-robot
  triggers:
    - name: github-push-trigger
      interceptors:
        - name: webhook-secret-check
          ref:
            name: "github"
          params:
            - name: eventTypes
              value:
                - push
            - name: secretRef
              value:
                secretName: tekton-webhook-secret
                secretKey: token
        - name: filter-main-branch
          ref:
            name: cel
          params:
            - name: filter
              value: body.ref == 'refs/heads/main'
        - name: add-branch-param
          ref:
            name: cel
          params:
            - name: overlays
              value:
              - key: branch
                expression: "body.ref.split('/').last()"
      bindings:
        - ref: github-push-binding
      template:
        ref: github-push-template
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: github-push-template
spec:
  params:
    - name: gitrepositoryurl
    - name: branch
  resourcetemplates:
    - apiVersion: tekton.dev/v1
      kind: PipelineRun
      metadata:
        generateName: github-push-pipelinerun-
      spec:
        params:
          - name: gitrepositoryurl
            value: $(tt.params.gitrepositoryurl)
          - name: branch
            value: $(tt.params.branch)
        pipelineRef:
          name: tekton-build-pipeline
        workspaces:
          - name: source-workspace
            persistentVolumeClaim:
              claimName: jegornl-pvc
