---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: tekton-build-pipeline
spec:
  workspaces:
    - name: source-workspace
  params:
    - name: gitrepositoryurl
      type: string
    - name: branch
      type: string

  tasks:
    - name: pull-code
      workspaces:
        - name: source-workspace
          workspace: source-workspace
      params:
        - name: gitrepositoryurl
          value: $(params.gitrepositoryurl)
        - name: branch
          value: $(params.branch)
      taskSpec:      
        workspaces:
          - name: source-workspace
            mountPath: /workspace
        params:
          - name: gitrepositoryurl
            type: string
          - name: branch
            type: string
        steps:
          - name: clone-repo
            image: alpine/git
            script: |
              rm -rf /workspace/source
              git clone "$(params.gitrepositoryurl)" -b "$(params.branch)" /workspace/source
            volumeMounts:
              - name: github-token
                mountPath: /root/.git-credentials
                subPath: token
        volumes:
          - name: github-token
            secret:
              secretName: github-secret

    - name: determine-next-image-tag
      runAfter: [pull-code]
      workspaces:
        - name: source-workspace
          workspace: source-workspace
      taskSpec:
        workspaces:
          - name: source-workspace
            mountPath: /workspace
        results:
          - name: new-image-tag
        steps:
          - name: increment-version
            image: bash:latest
            script: |
              #!/usr/bin/env bash
              current_version=$(grep 'imageTag:' charts/jegor-nl/values.yaml | cut -d' ' -f2)
              version_number=${current_version#v}  # This strips the leading 'v'
              IFS='.' read -r major minor patch <<< "$version_number"
              new_version="v$major.$minor.$((patch+1))"
              echo "$new_version" | tee $(results.new-image-tag.path)
        
    - name: build-docker-image
      runAfter: [determine-next-image-tag]
      workspaces:
        - name: source-workspace
          workspace: source-workspace
      params:
        - name: imageTag
          value: "$(tasks.determine-next-image-tag.results.new-image-tag)"  # Use result from previous task
      taskSpec:
        workspaces:
          - name: source-workspace
            mountPath: /workspace
        params:
          - name: imageTag
            type: string
        steps:
          - name: build
            image: gcr.io/kaniko-project/executor:latest
            args:
              - "--dockerfile=/workspace/source/Dockerfile"  # Ensure correct path to Dockerfile
              - "--context=/workspace/source"  # Use the local workspace as context
              - "--destination=harbor.k8s.jegor.nl/jopdorp/jegornl:v1.0.6"
            volumeMounts:
              - name: kaniko-secret
                mountPath: /kaniko/.docker
        volumes:
          - name: kaniko-secret
            secret:
              secretName: harbor-credentials

    - name: update-argocd-application-and-values
      runAfter: [determine-next-image-tag]
      workspaces:
        - name: source-workspace
          workspace: source-workspace
      params:
        - name: imageTag
          value: "$(tasks.determine-next-image-tag.results.new-image-tag)"  # Use result from previous task
      taskSpec:
        workspaces:
          - name: source-workspace
            mountPath: /workspace
        params:
          - name: imageTag
        steps:
          - name: update-manifest-and-values
            image: alpine
            script: |
              cd /workspace/source
              sed -i "s/imageTag: .*/imageTag: \"$(params.imageTag)\"/" charts/jegor-nl/values.yaml
              sed -i "s/imageTag: .*/imageTag: \"$(params.imageTag)\"/" charts/cicd/values.yaml
              git add charts/jegor-nl/values.yaml
              git add charts/cicd/values.yaml
              git commit -m "Update to image tag $(params.imageTag)"
              git push origin main

    - name: upgrade-helm-chart
      runafter: [update-argocd-application-and-values, build-docker-image]
      workspaces:
        - name: source-workspace
          workspace: source-workspace
      taskSpec:
        workspaces:
          - name: source-workspace
            mountPath: /workspace
        steps:
          - name: upgrade-chart
            image: alpine/helm:3.7.0
            script: |
              cd /workspace/source/charts/cicd
              helm upgrade jegor-nl-cicd . --namespace jegor-nl

    - name: create-github-tag
      runafter: [upgrade-helm-chart]
      workspaces:
        - name: source-workspace
          workspace: source-workspace
      params:
        - name: gitrepositoryurl
          value: "$(params.gitrepositoryurl)"
        - name: imageTag
          value: "$(tasks.determine-next-image-tag.results.new-image-tag)"  # Use result from previous task
      taskSpec:
        workspaces:
          - name: source-workspace
            mountPath: /workspace
        params:
          - name: imageTag
            type: string
          - name: gitrepositoryurl
            type: string
        steps:
          - name: create-tag
            image: curlimages/curl:7.78.0
            script: |
              curl -H "Authorization: token $$(cat /root/.git-credentials)" \
                   -H "Content-Type: application/json" \
                   -X POST $(params.gitrepositoryurl)/git/refs \
                   -d '{"ref": "refs/tags/$(params.imageTag)", "sha": "$$(git rev-parse HEAD)"}'
            volumeMounts:
              - name: github-token
                mountPath: /root/.git-credentials
                subPath: token
        volumes:
          - name: github-token
            secret:
              secretName: github-secret
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jegornl-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
